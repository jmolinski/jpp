reverse_test_1:
start 1
accept 2
1 a 2
2 a 2

reverse_test_2:
start 1
accept 2 4
1 a 2
2 a 2
3 a 4
4 a 4

simple_path_1:
start 1
accept 2
1 a 2
2 a 3
3 a 3

single_node:
start 1
accept 1
1 a 1

empty_alphabet:
start 1
accept

finite_compute_1:
start 1
accept 3
1 a 2
1 b 3
2 a 2
2 b 2
3 a 2
3 b 2

finite_compute_2:
start 1
accept 2
1 a 3
1 b 2
3 a 3
3 b 3
2 a 3
2 b 3

finite_compute_3:
start 1
accept 3
1 b 2
1 a 3
2 a 2
2 b 2
3 a 2
3 b 2

alphabet_compare_1a:
start 1
accept 1
1 a 1

alphabet_compare_1b:
start 1
accept 1
1 a 1
1 b 1

simple_contain_1a:
start 1
accept 2
1 a 2
2 a 3
3 a 3

simple_contain_1b:
start 1
accept 2
1 a 2
2 a 2

state_before_start_1:
start 2
accept 3
1 a 2
2 a 3
3 a 4
4 a 4

state_before_start_2:
start 2
accept 3
1 a 2
2 a 3
3 a 4
4 a 4
5 a 2

state_before_start_3:
start 2
accept 3
1 a 2
2 a 3
3 a 4
4 a 4
1 b 1
2 b 3
3 b 4
4 b 4
